
package Vista;

import Conexion.ConexionBD;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;


public class ConsultasProveedores extends javax.swing.JInternalFrame {
 
    public ConsultasProveedores() {
        initComponents();
        txtDni.setEnabled(false);
        txtRuc.setEnabled(false);
        CargarlistaProveedores();
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rdgenero = new javax.swing.JRadioButton();
        rddni = new javax.swing.JRadioButton();
        rdtodo = new javax.swing.JRadioButton();
        btnbuscar = new javax.swing.JButton();
        rdEspecialidad = new javax.swing.JRadioButton();
        txtDni = new jtextfieldround.JTextFieldRound();
        txtRuc = new jtextfieldround.JTextFieldRound();
        txtNombre = new jtextfieldround.JTextFieldRound();
        jLabel1 = new javax.swing.JLabel();
        btnCerrar = new javax.swing.JButton();
        txtCantidad = new jtextfieldround.JTextFieldRound();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbProveedores = new rojerusan.RSTableMetro();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setTitle("Consultar Proveedores");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Buscar Empleado:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11), new java.awt.Color(0, 102, 102))); // NOI18N

        buttonGroup1.add(rdgenero);
        rdgenero.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rdgenero.setForeground(new java.awt.Color(0, 51, 51));
        rdgenero.setSelected(true);
        rdgenero.setText("Buscar Proveedor por nombre:");
        rdgenero.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdgenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdgeneroActionPerformed(evt);
            }
        });

        buttonGroup1.add(rddni);
        rddni.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rddni.setForeground(new java.awt.Color(0, 51, 51));
        rddni.setText("Buscar Proveedor  por DNI:");
        rddni.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rddni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rddniActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdtodo);
        rdtodo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rdtodo.setForeground(new java.awt.Color(0, 51, 51));
        rdtodo.setText("Mostrar todos los Proveedores");
        rdtodo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdtodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdtodoActionPerformed(evt);
            }
        });

        btnbuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/btn40.png"))); // NOI18N
        btnbuscar.setContentAreaFilled(false);
        btnbuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnbuscar.setFocusPainted(false);
        btnbuscar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/btn41.png"))); // NOI18N
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdEspecialidad);
        rdEspecialidad.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rdEspecialidad.setForeground(new java.awt.Color(0, 51, 51));
        rdEspecialidad.setText("Buscar Proveedor por Ruc :");
        rdEspecialidad.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdEspecialidadActionPerformed(evt);
            }
        });

        txtDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniKeyTyped(evt);
            }
        });

        txtRuc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRucKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdgenero)
                    .addComponent(rddni)
                    .addComponent(rdtodo)
                    .addComponent(rdEspecialidad))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtRuc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                        .addComponent(txtDni, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnbuscar)
                .addContainerGap(277, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(rddni))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(rdgenero))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRuc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdEspecialidad))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdtodo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setText("Cantidad de Registros:");

        btnCerrar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/btn42.png"))); // NOI18N
        btnCerrar.setContentAreaFilled(false);
        btnCerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCerrar.setFocusPainted(false);
        btnCerrar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/btn43.png"))); // NOI18N
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        txtCantidad.setEditable(false);

        tbProveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbProveedores.setAltoHead(22);
        tbProveedores.setColorBackgoundHead(new java.awt.Color(0, 51, 51));
        tbProveedores.setColorFilasBackgound2(new java.awt.Color(240, 240, 240));
        tbProveedores.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tbProveedores.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tbProveedores.setFuenteFilas(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        tbProveedores.setFuenteFilasSelect(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tbProveedores.setFuenteHead(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tbProveedores.setGrosorBordeFilas(0);
        jScrollPane2.setViewportView(tbProveedores);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(4, 4, 4)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(248, 248, 248)
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(btnCerrar)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void rdgeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdgeneroActionPerformed
// TODO add your handling code here:
    if(rdgenero.isSelected()==true)
    {
        txtNombre.requestFocus();
        txtNombre.setText("");
        txtNombre.setEnabled(true);
        txtDni.setEnabled(false);
        txtDni.setText("");
        txtRuc.setEnabled(false);
        txtRuc.setText("");
        btnbuscar.setEnabled(true);
        CargarlistaProveedores();
        
    }
}//GEN-LAST:event_rdgeneroActionPerformed

private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
   

// TODO add your handling code here:
   String Nombre= txtNombre.getText();
   String dni=txtDni.getText();
   String Ruc=txtRuc.getText();
   
   if(rdgenero.isSelected()==true)
   {
       DefaultTableModel modelo= new DefaultTableModel();
         String[] Titulos = {"Id", "Nombres", "Dni", "Ruc", "Dirección","Email", "Teléfono", "Banco", "Cuenta", "Estado"};
       modelo.setColumnIdentifiers(Titulos);
       this.tbProveedores.setModel(modelo);
       try {
            
            String ConsultaSQL="SELECT * FROM proveedor WHERE Nombre='"+Nombre+"'";
        
            String []registros= new String[10];
           
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0] = rs.getString("IdProveedor");
                registros[1] = rs.getString("Nombre");
                registros[2] = rs.getString("Dni");
                registros[3] = rs.getString("Ruc");
                registros[4] = rs.getString("Direccion");
                registros[5] = rs.getString("Email");
                registros[6] = rs.getString("Telefono");
                registros[7] = rs.getString("Banco");
                registros[8] = rs.getString("Cuenta");
                registros[9] = rs.getString("Estado");
                modelo.addRow(registros);
                                
            }
            tbProveedores.setModel(modelo);
            txtCantidad.setText(""+tbProveedores.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(ConsultasProveedores.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
   
   if(rddni.isSelected()==true)
   {
       DefaultTableModel modelo= new DefaultTableModel();
         String[] Titulos = {"Id", "Nombres", "Dni", "Ruc", "Dirección","Email", "Teléfono", "Banco", "Cuenta", "Estado"};
       modelo.setColumnIdentifiers(Titulos);
       this.tbProveedores.setModel(modelo);
       try {
            
            String ConsultaSQL="SELECT * FROM proveedor WHERE Dni='"+dni+"'";
        
            String []registros= new String[10];
           
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
               registros[0] = rs.getString("IdProveedor");
                registros[1] = rs.getString("Nombre");
                registros[2] = rs.getString("Dni");
                registros[3] = rs.getString("Ruc");
                registros[4] = rs.getString("Direccion");
                registros[5] = rs.getString("Email");
                registros[6] = rs.getString("Telefono");
                registros[7] = rs.getString("Banco");
                registros[8] = rs.getString("Cuenta");
                registros[9] = rs.getString("Estado");
                modelo.addRow(registros);
                                
            }
            tbProveedores.setModel(modelo);
            txtCantidad.setText(""+tbProveedores.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(ConsultasProveedores.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       
   }
   
    if(rdEspecialidad.isSelected()==true)
   {
       DefaultTableModel modelo= new DefaultTableModel();
         String[] Titulos = {"Id", "Nombres", "Dni", "Ruc", "Dirección","Email", "Teléfono", "Banco", "Cuenta", "Estado"};
       modelo.setColumnIdentifiers(Titulos);
       this.tbProveedores.setModel(modelo);
       try {
            
            String ConsultaSQL="SELECT * FROM proveedor WHERE Ruc='"+Ruc+"'";
        
            String []registros= new String[10];
           
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0] = rs.getString("IdProveedor");
                registros[1] = rs.getString("Nombre");
                registros[2] = rs.getString("Dni");
                registros[3] = rs.getString("Ruc");
                registros[4] = rs.getString("Direccion");
                registros[5] = rs.getString("Email");
                registros[6] = rs.getString("Telefono");
                registros[7] = rs.getString("Banco");
                registros[8] = rs.getString("Cuenta");
                registros[9] = rs.getString("Estado");
                modelo.addRow(registros);
                                
            }
            tbProveedores.setModel(modelo);
            txtCantidad.setText(""+tbProveedores.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(ConsultasProveedores.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       
   }
   
   if(rdtodo.isSelected()==true)
   {
      CargarlistaProveedores();
   }
    
}//GEN-LAST:event_btnbuscarActionPerformed

private void rddniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rddniActionPerformed
// TODO add your handling code here:
    if(rddni.isSelected()==true)
    {
        txtNombre.setText("");
        txtNombre.setEnabled(false);
        txtDni.setEnabled(true);
        txtDni.requestFocus();
        txtRuc.setText("");
        txtRuc.setEnabled(false);
        btnbuscar.setEnabled(true);
        CargarlistaProveedores();
    }
}//GEN-LAST:event_rddniActionPerformed

private void rdtodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdtodoActionPerformed
// TODO add your handling code here:
   CargarlistaProveedores();
    txtNombre.setText("");
    txtNombre.setEnabled(false);
    txtDni.setText("");
    txtDni.setEnabled(false);
    txtRuc.setEnabled(false);
    txtRuc.setText("");
    btnbuscar.setEnabled(false);
}//GEN-LAST:event_rdtodoActionPerformed

    private void rdEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdEspecialidadActionPerformed
        if(rdEspecialidad.isSelected()==true)
    {
        txtNombre.setText("");
        txtNombre.setEnabled(false);
        txtDni.setEnabled(false);
        txtDni.setText("");
        txtRuc.setEnabled(true);
        txtRuc.requestFocus();
        btnbuscar.setEnabled(true);
        CargarlistaProveedores();
    }
    }//GEN-LAST:event_rdEspecialidadActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void txtDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyTyped
        char car = evt.getKeyChar();
        if ((car < '0' || car > '9')) {
            evt.consume();
        }
        int i = txtDni.getText().length();
        if (txtDni.getText().trim().length() < 8) {

        } else {
            i = 10;
            String com = txtDni.getText().substring(0, 7);
            txtDni.setText("");
            txtDni.setText(com);
        }
    }//GEN-LAST:event_txtDniKeyTyped

    private void txtRucKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRucKeyTyped
        char car = evt.getKeyChar();
        if ((car < '0' || car > '9')) {
            evt.consume();
        }
        int i = txtRuc.getText().length();
        if (txtRuc.getText().trim().length() < 11) {

        } else {
            i = 10;
            String com = txtRuc.getText().substring(0, 10);
            txtRuc.setText("");
            txtRuc.setText(com);
        }
    }//GEN-LAST:event_txtRucKeyTyped

    void CargarlistaProveedores()          
    {
        DefaultTableModel modelo= new DefaultTableModel();
         String[] Titulos = {"Id", "Nombres", "Dni", "Ruc", "Dirección","Email", "Teléfono", "Banco", "Cuenta", "Estado"};
       modelo.setColumnIdentifiers(Titulos);
         this.tbProveedores.setModel(modelo);
        try {
            
            String ConsultaSQL="SELECT * FROM proveedor";
        
            String []registros= new String[10];
           
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0] = rs.getString("IdProveedor");
                registros[1] = rs.getString("Nombre");
                registros[2] = rs.getString("Dni");
                registros[3] = rs.getString("Ruc");
                registros[4] = rs.getString("Direccion");
                registros[5] = rs.getString("Email");
                registros[6] = rs.getString("Telefono");
                registros[7] = rs.getString("Banco");
                registros[8] = rs.getString("Cuenta");
                registros[9] = rs.getString("Estado");
                modelo.addRow(registros);
                                
            }
            tbProveedores.setModel(modelo);
            txtCantidad.setText(""+tbProveedores.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(ConsultasProveedores.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnbuscar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rdEspecialidad;
    private javax.swing.JRadioButton rddni;
    private javax.swing.JRadioButton rdgenero;
    private javax.swing.JRadioButton rdtodo;
    private rojerusan.RSTableMetro tbProveedores;
    private jtextfieldround.JTextFieldRound txtCantidad;
    private jtextfieldround.JTextFieldRound txtDni;
    private jtextfieldround.JTextFieldRound txtNombre;
    private jtextfieldround.JTextFieldRound txtRuc;
    // End of variables declaration//GEN-END:variables
ConexionBD cc= new ConexionBD();
Connection cn = cc.conectar();


}
